var searchIndex = {};
searchIndex["kyles_algorithm_crate"] = {"doc":"","items":[[0,"tree","kyles_algorithm_crate","",null,null],[3,"Tree","kyles_algorithm_crate::tree","Representation of a tree structure",null,null],[11,"new","","Returns a new instance of a tree, with root_val as the value for the node",0,{"i":[{"n":"t"}],"o":{"n":"self"}}],[11,"add_subtree","","Adds a given tree to the list of children of this tree",0,{"i":[{"n":"self"},{"n":"tree"}]}],[11,"add_subtree_value","","Add a new subtree to the root by specifying a value to store at the new child node",0,{"i":[{"n":"self"},{"n":"t"}]}],[11,"postorder_traversal","","Returns the values in the tree that are visited in a post-order traversal of the tree from the root",0,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"postorder_traversal_node","","Returns the values in the tree that are visited in a post-order traversal of the tree from the given node # Arguments * `start_node` - The sub tree to start the traversal at",0,{"i":[{"n":"tree"}],"o":{"n":"vec"}}],[11,"preorder_traversal_node","","Returns the values in the tree that are visited in a pre-order traversal of the tree from the given node # Arguments * `start_node` - The sub tree to start the traversal at",0,{"i":[{"n":"tree"}],"o":{"n":"vec"}}],[11,"preorder_traversal","","Returns the values in the tree that are visited in a post-order traversal of the tree from the root",0,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[0,"graph","kyles_algorithm_crate","",null,null],[3,"Graph","kyles_algorithm_crate::graph","Adjacency list implementation of a graph",null,null],[12,"nodes","","",1,null],[3,"Node","","Nodes that store data",null,null],[3,"Edge","","Directed edges between nodes",null,null],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Returns a new instance of a Graph # Example",1,{"o":{"n":"self"}}],[11,"add_node","","Add a new node to the graph with supplied data.  Returns the id of the node in the graph. # Arguments",1,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"u32"}}],[11,"add_directed_edge","","Add a directed edge from one node to another # Arguments",1,{"i":[{"n":"self"},{"n":"u32"},{"n":"u32"}]}],[11,"add_undirected_edge","","Add an undirected edge between two nodes # Arguments",1,{"i":[{"n":"self"},{"n":"u32"},{"n":"u32"}]}],[11,"add_weighted_directed_edge","","Add a weighted directed edge from one node to another # Arguments",1,{"i":[{"n":"self"},{"n":"u32"},{"n":"u32"},{"n":"u32"}]}],[11,"add_weighted_undirected_edge","","Add a weighted undirected edge between two nodes # Arguments",1,{"i":[{"n":"self"},{"n":"u32"},{"n":"u32"},{"n":"u32"}]}],[11,"get_node","","Get a node from the graph # Arguments 'node' - The ID of the node to get from the graph",1,{"i":[{"n":"self"},{"n":"u32"}],"o":{"g":["node"],"n":"option"}}],[11,"get_node_mut","","Get a mutable node from the graph # Arguments 'node' - The ID of the node to get from the graph",1,{"i":[{"n":"self"},{"n":"u32"}],"o":{"g":["node"],"n":"option"}}],[11,"new","","Returns a new instance of a Node with the given data # Arguments",2,{"i":[{"n":"t"}],"o":{"n":"self"}}],[11,"new","","Returns a new instance of an edge from one node to another, with a given weight # Arguments",3,{"i":[{"n":"u32"},{"n":"u32"},{"n":"u32"}],"o":{"n":"self"}}]],"paths":[[3,"Tree"],[3,"Graph"],[3,"Node"],[3,"Edge"]]};
initSearch(searchIndex);
